import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import mglearn
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split

### Load Dataset
from sklearn.datasets import load_breast_cancer
cancer = load_breast_cancer()

X_train, X_test, y_train, y_test = train_test_split(
	cancer.data, cancer.target, stratify=cancer.target, random_state=42)
print(X_train.shape)

# train & test with default C=1
logreg = LogisticRegression().fit(X_train, y_train)
print("Training set score (C=1): {:.3f}".format(logreg.score(X_train, y_train)))
print("Test set score (C=1): {:.3f}".format(logreg.score(X_test, y_test)))

# train & test with C=100 (more overfit)
logreg100 = LogisticRegression(C=100, max_iter=1000).fit(X_train, y_train) #设置max_iter控制收敛可得到不同的正确率
print("Training set score (C=100): {:.3f}".format(logreg100.score(X_train, y_train)))
print("Test set score (C=100): {:.3f}".format(logreg100.score(X_test, y_test)))

# train & test with C=0.01 (less overfit)
logreg001 = LogisticRegression(C=0.01).fit(X_train, y_train)
print("Training set score (C=0.01): {:.3f}".format(logreg001.score(X_train, y_train)))
print("Test set score (C=0.01): {:.3f}".format(logreg001.score(X_test, y_test)))

# （L2) plot the coefficients learned by the models with 3 different C values
plt.plot(logreg.coef_.T, 'o', label="C=1")
plt.plot(logreg100.coef_.T, '^', label="C=100")
plt.plot(logreg001.coef_.T, 'v', label="C=0.001")
plt.xticks(range(cancer.data.shape[1]), cancer.feature_names, rotation=90)
plt.hlines(0, 0, cancer.data.shape[1])
plt.ylim(-5, 5)
plt.xlabel("Coefficient index")
plt.ylabel("Coefficient magnitude")
plt.legend()
plt.show()

# try L1 regularization
for C, marker in zip([0.001, 1, 100], ['o', '^', 'v']):
	# 要用L1 regularization必须加上solver='liblinear' （for new version sklearn)
	lr_l1 = LogisticRegression(C=C, penalty="l1", solver='liblinear').fit(X_train, y_train)
	print("Training accuracy of l1 logreg with C={:.3f}: {:.2f}".format(
		C, lr_l1.score(X_train, y_train)))
	print("Test accuracy of l1 logreg with C={:.3f}: {:.2f}".format(
		C, lr_l1.score(X_test, y_test)))
	plt.plot(lr_l1.coef_.T, marker, label="C={:.3f}".format(C))

plt.xticks(range(cancer.data.shape[1]), cancer.feature_names, rotation=90)
plt.hlines(0, 0, cancer.data.shape[1])
plt.xlabel("Coefficient index")
plt.ylabel("Coefficient magnitude")

plt.ylim(-5, 5)
plt.legend(loc=3)
plt.show()